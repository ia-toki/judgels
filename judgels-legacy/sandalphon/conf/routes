->          /                                                                       sandalphoncommons.Routes
->          /                                                                       jophielcommons.Routes

GET         /                                                                       org.iatoki.judgels.sandalphon.ApplicationController.index()
GET         /auth                                                                   org.iatoki.judgels.sandalphon.ApplicationController.auth(returnUri ?= "")
GET         /authRole                                                               org.iatoki.judgels.sandalphon.ApplicationController.authRole(returnUri ?= "")
GET         /afterLogin                                                             org.iatoki.judgels.sandalphon.ApplicationController.afterLogin(returnUri ?= "")
GET         /localLogout                                                            org.iatoki.judgels.sandalphon.ApplicationController.logout(returnUri ?= "")

GET         /problems                                                               org.iatoki.judgels.sandalphon.problem.base.ProblemController.index()
GET         /problems/                                                              org.iatoki.judgels.sandalphon.problem.base.ProblemController.listProblems(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /problems/new                                                           org.iatoki.judgels.sandalphon.problem.base.ProblemController.createProblem()
POST        /problems                                                               org.iatoki.judgels.sandalphon.problem.base.ProblemController.postCreateProblem()
GET         /problems/programming/new                                               org.iatoki.judgels.sandalphon.problem.programming.ProgrammingProblemController.createProgrammingProblem()
POST        /problems/programming                                                   org.iatoki.judgels.sandalphon.problem.programming.ProgrammingProblemController.postCreateProgrammingProblem()
GET         /problems/bundle/new                                                    org.iatoki.judgels.sandalphon.problem.bundle.BundleProblemController.createBundleProblem()

GET         /problems/:problemId                                                    org.iatoki.judgels.sandalphon.problem.base.ProblemController.viewProblem(problemId: Long)
GET         /problems/:problemId/edit                                               org.iatoki.judgels.sandalphon.problem.base.ProblemController.editProblem(problemId: Long)
POST        /problems/:problemId                                                    org.iatoki.judgels.sandalphon.problem.base.ProblemController.postEditProblem(problemId: Long)

GET         /problems/:problemId/enter                                              org.iatoki.judgels.sandalphon.problem.base.ProblemController.enterProblem(problemId: Long)

GET         /problems/:problemId/jumpToStatements                                   org.iatoki.judgels.sandalphon.problem.base.ProblemController.jumpToStatement(problemId: Long)
GET         /problems/:problemId/jumpToVersions                                     org.iatoki.judgels.sandalphon.problem.base.ProblemController.jumpToVersions(problemId: Long)
GET         /problems/:problemId/jumpToPartners                                     org.iatoki.judgels.sandalphon.problem.base.ProblemController.jumpToPartners(problemId: Long)

POST        /problems/:problemId/switchLanguage                                     org.iatoki.judgels.sandalphon.problem.base.ProblemController.switchLanguage(problemId: Long)

GET         /problems/:problemId/statements                                         org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.viewStatement(problemId: Long)
GET         /problems/:problemId/statements/edit                                    org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.editStatement(problemId: Long)
POST        /problems/:problemId/statements                                         org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.postEditStatement(problemId: Long)
GET         /problems/:problemId/statements/media                                   org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.listStatementMediaFiles(problemId: Long)
POST        /problems/:problemId/statements/media                                   org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.postUploadStatementMediaFiles(problemId: Long)
GET         /problems/:problemId/statements/languages                               org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.listStatementLanguages(problemId: Long)
POST        /problems/:problemId/statements/languages                               org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.postAddStatementLanguage(problemId: Long)
GET         /problems/:problemId/statements/languages/:language/enable              org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.enableStatementLanguage(problemId: Long, language)
GET         /problems/:problemId/statements/languages/:language/disable             org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.disableStatementLanguage(problemId: Long, language)
GET         /problems/:problemId/statements/languages/:language/makeDefault         org.iatoki.judgels.sandalphon.problem.base.statement.ProblemStatementController.makeDefaultStatementLanguage(problemId: Long, language)

GET         /problems/:problemId/partners                                           org.iatoki.judgels.sandalphon.problem.base.partner.ProblemPartnerController.viewPartners(problemId: Long)
GET         /problems/:problemId/partners/                                          org.iatoki.judgels.sandalphon.problem.base.partner.ProblemPartnerController.listPartners(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/:problemId/partners/add                                       org.iatoki.judgels.sandalphon.problem.base.partner.ProblemPartnerController.addPartner(problemId: Long)
GET         /problems/:problemId/partners/:partnerId/edit                           org.iatoki.judgels.sandalphon.problem.base.partner.ProblemPartnerController.editPartner(problemId: Long, partnerId: Long)

GET         /problems/:problemId/versions/history                                   org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.listVersionHistory(problemId: Long)
GET         /problems/:problemId/versions/history/:hash/restore                     org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.restoreVersionHistory(problemId: Long, hash)
GET         /problems/:problemId/versions/local                                     org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.viewVersionLocalChanges(problemId: Long)
POST        /problems/:problemId/versions/local                                     org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.postCommitVersionLocalChanges(problemId: Long)
GET         /problems/:problemId/versions/local/rebase                              org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.editVersionLocalChanges(problemId: Long)
GET         /problems/:problemId/versions/local/discard                             org.iatoki.judgels.sandalphon.problem.base.version.ProblemVersionController.discardVersionLocalChanges(problemId: Long)

GET         /problems/programming/:problemId/jumpToGrading                          org.iatoki.judgels.sandalphon.problem.programming.ProgrammingProblemController.jumpToGrading(problemId: Long)
GET         /problems/programming/:problemId/jumpToSubmissions                      org.iatoki.judgels.sandalphon.problem.programming.ProgrammingProblemController.jumpToSubmissions(problemId: Long)

GET         /problems/programming/:problemId/statements                             org.iatoki.judgels.sandalphon.problem.programming.statement.ProgrammingProblemStatementController.viewStatement(problemId: Long)

GET         /problems/programming/:problemId/partners/add                           org.iatoki.judgels.sandalphon.problem.programming.partner.ProgrammingProblemPartnerController.addPartner(problemId: Long)
POST        /problems/programming/:problemId/partners                               org.iatoki.judgels.sandalphon.problem.programming.partner.ProgrammingProblemPartnerController.postAddPartner(problemId: Long)
GET         /problems/programming/:problemId/partners/:partnerId/edit               org.iatoki.judgels.sandalphon.problem.programming.partner.ProgrammingProblemPartnerController.editPartner(problemId: Long, partnerId: Long)
POST        /problems/programming/:problemId/partners/:partnerId                    org.iatoki.judgels.sandalphon.problem.programming.partner.ProgrammingProblemPartnerController.postEditPartner(problemId: Long, partnerId: Long)


POST        /problems/programming/:problemId/submissions                            org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.postSubmit(problemId: Long)
GET         /problems/programming/:problemId/submissions                            org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.viewSubmissions(problemId: Long)
GET         /problems/programming/:problemId/submissions/                           org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.listSubmissions(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/programming/:problemId/submissions/:submissionId              org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.viewSubmission(problemId: Long, submissionId: Long)
GET         /problems/programming/:problemId/submissions/:submissionId/regrade      org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.regradeSubmission(problemId: Long, submissionId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/programming/:problemId/submissions/regrade                    org.iatoki.judgels.sandalphon.problem.programming.submission.ProgrammingProblemSubmissionController.regradeSubmissions(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")

GET         /problems/programming/:problemId/grading/engine                         org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.editGradingEngine(problemId: Long)
POST        /problems/programming/:problemId/grading/engine                         org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.postEditGradingEngine(problemId: Long)
GET         /problems/programming/:problemId/grading/config                         org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.editGradingConfig(problemId: Long)
POST        /problems/programming/:problemId/grading/config                         org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.postEditGradingConfig(problemId: Long)
GET         /problems/programming/:problemId/grading/config/tokilib                 org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.editGradingConfigByTokilibFormat(problemId: Long)
GET         /problems/programming/:problemId/grading/config/autoPopulation          org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.editGradingConfigByAutoPopulation(problemId: Long)
GET         /problems/programming/:problemId/grading/testdata                       org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.listGradingTestDataFiles(problemId: Long)
POST        /problems/programming/:problemId/grading/testdata                       org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.postUploadGradingTestDataFiles(problemId: Long)
GET         /problems/programming/:problemId/grading/helpers                        org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.listGradingHelperFiles(problemId: Long)
POST        /problems/programming/:problemId/grading/helpers                        org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.postUploadGradingHelperFiles(problemId: Long)
GET         /problems/programming/:problemId/grading/languageRestriction            org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.editLanguageRestriction(problemId: Long)
POST        /problems/programming/:problemId/grading/languageRestriction            org.iatoki.judgels.sandalphon.problem.programming.grading.ProgrammingProblemGradingController.postEditLanguageRestriction(problemId: Long)

GET         /problems/bundle/:problemId/jumpToItems                                 org.iatoki.judgels.sandalphon.problem.bundle.BundleProblemController.jumpToItems(problemId: Long)
GET         /problems/bundle/:problemId/jumpToSubmissions                           org.iatoki.judgels.sandalphon.problem.bundle.BundleProblemController.jumpToSubmissions(problemId: Long)

GET         /problems/bundle/:problemId/items                                       org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.viewItems(problemId: Long)
GET         /problems/bundle/:problemId/items/                                      org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.listCreateItems(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
GET         /problems/bundle/:problemId/items/new                                   org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.createItem(problemId: Long, itemType, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
POST        /problems/bundle/:problemId/items                                       org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.postCreateItem(problemId: Long, itemType, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
GET         /problems/bundle/:problemId/items/:itemJid                              org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.editItem(problemId: Long, itemJid)
POST        /problems/bundle/:problemId/items/:itemJid                              org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.postEditItem(problemId: Long, itemJid)
GET         /problems/bundle/:problemId/items/:itemJid/up                           org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.moveItemUp(problemId: Long, itemJid)
GET         /problems/bundle/:problemId/items/:itemJid/down                         org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.moveItemDown(problemId: Long, itemJid)
GET         /problems/bundle/:problemId/items/:itemJid/remove                       org.iatoki.judgels.sandalphon.problem.bundle.item.BundleItemController.removeItem(problemId: Long, itemJid)

GET         /problems/bundle/:problemId/statements                                  org.iatoki.judgels.sandalphon.problem.bundle.statement.BundleProblemStatementController.viewStatement(problemId: Long)

GET         /problems/bundle/:problemId/partners/add                                org.iatoki.judgels.sandalphon.problem.bundle.partner.BundleProblemPartnerController.addPartner(problemId: Long)
POST        /problems/bundle/:problemId/partners                                    org.iatoki.judgels.sandalphon.problem.bundle.partner.BundleProblemPartnerController.postAddPartner(problemId: Long)
GET         /problems/bundle/:problemId/partners/:partnerId/edit                    org.iatoki.judgels.sandalphon.problem.bundle.partner.BundleProblemPartnerController.editPartner(problemId: Long, partnerId: Long)
POST        /problems/bundle/:problemId/partners/:partnerId                         org.iatoki.judgels.sandalphon.problem.bundle.partner.BundleProblemPartnerController.postEditPartner(problemId: Long, partnerId: Long)

POST        /problems/bundle/:problemId/submissions                                 org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.postSubmit(problemId: Long)
GET         /problems/bundle/:problemId/submissions                                 org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.viewSubmissions(problemId: Long)
GET         /problems/bundle/:problemId/submissions/                                org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.listSubmissions(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/bundle/:problemId/submissions/:submissionId                   org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.viewSubmission(problemId: Long, submissionId: Long)
GET         /problems/bundle/:problemId/submissions/:submissionId/regrade           org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.regradeSubmission(problemId: Long, submissionId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/bundle/:problemId/submissions/regrade                         org.iatoki.judgels.sandalphon.problem.bundle.submission.BundleProblemSubmissionController.regradeSubmissions(problemId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")

GET         /lessons                                                                org.iatoki.judgels.sandalphon.lesson.LessonController.index()
GET         /lessons/                                                               org.iatoki.judgels.sandalphon.lesson.LessonController.listLessons(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /lessons/new                                                            org.iatoki.judgels.sandalphon.lesson.LessonController.createLesson()
POST        /lessons                                                                org.iatoki.judgels.sandalphon.lesson.LessonController.postCreateLesson()

GET         /lessons/:lessonId                                                      org.iatoki.judgels.sandalphon.lesson.LessonController.viewLesson(lessonId: Long)
GET         /lessons/:lessonId/edit                                                 org.iatoki.judgels.sandalphon.lesson.LessonController.editLesson(lessonId: Long)
POST        /lessons/:lessonId                                                      org.iatoki.judgels.sandalphon.lesson.LessonController.postEditLesson(lessonId: Long)

GET         /lessons/:lessonId/enter                                                org.iatoki.judgels.sandalphon.lesson.LessonController.enterLesson(lessonId: Long)

GET         /lessons/:lessonId/jumpToStatements                                     org.iatoki.judgels.sandalphon.lesson.LessonController.jumpToStatement(lessonId: Long)
GET         /lessons/:lessonId/jumpToVersions                                       org.iatoki.judgels.sandalphon.lesson.LessonController.jumpToVersions(lessonId: Long)
GET         /lessons/:lessonId/jumpToPartners                                       org.iatoki.judgels.sandalphon.lesson.LessonController.jumpToPartners(lessonId: Long)

POST        /lessons/:lessonId/switchLanguage                                       org.iatoki.judgels.sandalphon.lesson.LessonController.switchLanguage(lessonId: Long)

GET         /lessons/:lessonId/statements                                           org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.viewStatement(lessonId: Long)
GET         /lessons/:lessonId/statements/edit                                      org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.editStatement(lessonId: Long)
POST        /lessons/:lessonId/statements                                           org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.postEditStatement(lessonId: Long)
GET         /lessons/:lessonId/statements/media                                     org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.listStatementMediaFiles(lessonId: Long)
POST        /lessons/:lessonId/statements/media                                     org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.postUploadStatementMediaFiles(lessonId: Long)
GET         /lessons/:lessonId/statements/languages                                 org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.listStatementLanguages(lessonId: Long)
POST        /lessons/:lessonId/statements/languages                                 org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.postAddStatementLanguage(lessonId: Long)
GET         /lessons/:lessonId/statements/languages/:language/enable                org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.enableStatementLanguage(lessonId: Long, language)
GET         /lessons/:lessonId/statements/languages/:language/disable               org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.disableStatementLanguage(lessonId: Long, language)
GET         /lessons/:lessonId/statements/languages/:language/makeDefault           org.iatoki.judgels.sandalphon.lesson.statement.LessonStatementController.makeDefaultStatementLanguage(lessonId: Long, language)

GET         /lessons/:lessonId/partners                                             org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.viewPartners(lessonId: Long)
GET         /lessons/:lessonId/partners/                                            org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.listPartners(lessonId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /lessons/:lessonId/partners/add                                         org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.addPartner(lessonId: Long)
POST        /lessons/:lessonId/partners                                             org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.postAddPartner(lessonId: Long)
GET         /lessons/:lessonId/partners/:partnerId/edit                             org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.editPartner(lessonId: Long, partnerId: Long)
POST        /lessons/:lessonId/partners/:partnerId                                  org.iatoki.judgels.sandalphon.lesson.partner.LessonPartnerController.postEditPartner(lessonId: Long, partnerId: Long)

GET         /lessons/:lessonId/versions/history                                     org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.listVersionHistory(lessonId: Long)
GET         /lessons/:lessonId/versions/history/:hash/restore                       org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.restoreVersionHistory(lessonId: Long, hash)
GET         /lessons/:lessonId/versions/local                                       org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.viewVersionLocalChanges(lessonId: Long)
POST        /lessons/:lessonId/versions/local                                       org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.postCommitVersionLocalChanges(lessonId: Long)
GET         /lessons/:lessonId/versions/local/rebase                                org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.editVersionLocalChanges(lessonId: Long)
GET         /lessons/:lessonId/versions/local/discard                               org.iatoki.judgels.sandalphon.lesson.version.LessonVersionController.discardVersionLocalChanges(lessonId: Long)

GET         /users                                                                  org.iatoki.judgels.sandalphon.user.UserController.index()
GET         /users/                                                                 org.iatoki.judgels.sandalphon.user.UserController.listUsers(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /users/add                                                              org.iatoki.judgels.sandalphon.user.UserController.addUser()
POST        /users                                                                  org.iatoki.judgels.sandalphon.user.UserController.postAddUser()
GET         /users/:userId                                                          org.iatoki.judgels.sandalphon.user.UserController.viewUser(userId: Long)
GET         /users/:userId/edit                                                     org.iatoki.judgels.sandalphon.user.UserController.editUser(userId: Long)
POST        /users/:userId                                                          org.iatoki.judgels.sandalphon.user.UserController.postEditUser(userId: Long)
GET         /users/:userId/remove                                                   org.iatoki.judgels.sandalphon.user.UserController.deleteUser(userId: Long)

# Internal API
# Note: cannot use /api prefix

GET         /problems/:problemId/statements/render/:mediaFilename                   org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProblemStatementAPIController.renderMediaById(problemId: Long, mediaFilename)
GET         /problems/:problemId/statements/media/:filename                         org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProblemStatementAPIController.downloadStatementMediaFile(problemId: Long, filename)

GET         /problems/programming/:problemId/render/:mediaFilename                  org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProblemStatementAPIController.renderMediaById(problemId: Long, mediaFilename)
GET         /problems/bundle/:problemId/render/:mediaFilename                       org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProblemStatementAPIController.renderMediaById(problemId: Long, mediaFilename)
GET         /problems/bundle/:problemId/items/render/:mediaFilename                 org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProblemStatementAPIController.renderMediaById(problemId: Long, mediaFilename)

GET         /lessons/:lessonId/statements/render/:mediaFilename                     org.iatoki.judgels.sandalphon.controllers.api.internal.InternalLessonStatementAPIController.renderMediaById(lessonId: Long, mediaFilename)
GET         /lessons/:lessonId/render/:mediaFilename                                org.iatoki.judgels.sandalphon.controllers.api.internal.InternalLessonStatementAPIController.renderMediaById(lessonId: Long, mediaFilename)
GET         /lessons/:lessonId/statements/media/:filename                           org.iatoki.judgels.sandalphon.controllers.api.internal.InternalLessonStatementAPIController.downloadStatementMediaFile(lessonId: Long, filename)

GET         /problems/programming/:problemId/grading/testdata/:filename             org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProgrammingProblemGradingAPIController.downloadGradingTestDataFile(problemId: Long, filename)
GET         /problems/programming/:problemId/grading/helpers/:filename              org.iatoki.judgels.sandalphon.controllers.api.internal.InternalProgrammingProblemGradingAPIController.downloadGradingHelperFile(problemId: Long, filename)

# Client API

GET         /api/v1/problems/:problemJid/statements/media/:filename                 org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientProblemStatementAPIControllerV1.renderMediaByJid(problemJid, filename)

POST        /api/v1/problems/programming/:problemJid/statements                     org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientProgrammingProblemStatementAPIControllerV1.renderStatement(problemJid)
GET         /api/v1/problems/programming/:problemJid                                org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientProgrammingProblemAPIControllerV1.getProgrammingProblemInfo(problemJid)
GET         /api/v1/problems/programming/:problemJid/grading                        org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientProgrammingProblemGradingAPIControllerV1.downloadGradingFiles(problemJid)

POST        /api/v1/problems/bundle/:problemJid/statements                          org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientBundleProblemStatementAPIControllerV1.renderStatement(problemJid)
POST        /api/v1/problems/bundle/:problemJid/grade                               org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientBundleProblemGradingAPIControllerV1.grade(problemJid)

GET         /api/v1/lessons/:lessonJid/statements/media/:filename                   org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientLessonStatementAPIControllerV1.renderMediaByJid(lessonJid, filename)
POST        /api/v1/lessons/:lessonJid/statements                                   org.iatoki.judgels.sandalphon.controllers.api.client.v1.ClientLessonStatementAPIControllerV1.renderStatement(lessonJid)

# Client API v2

GET         /api/v2/client/problems/:problemJid                                     org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.getProblem(problemJid)
GET         /api/v2/client/problems/:problemJid/programming/submission-config       org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.getProblemSubmissionConfig(problemJid)
GET         /api/v2/client/problems/:problemJid/programming/worksheet               org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.getProgrammingProblemWorksheet(problemJid)
GET         /api/v2/client/problems/:problemJid/bundle/worksheet                    org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.getBundleProblemWorksheet(problemJid)
POST        /api/v2/client/problems/jids                                            org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.findProblemsByJids()
POST        /api/v2/client/problems/allowed-slug-to-jid                             org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientProblemAPIControllerV2.translateAllowedSlugToJids()

POST        /api/v2/client/lessons/allowed-slug-to-jid                             org.iatoki.judgels.sandalphon.controllers.api.client.v2.ClientLessonAPIControllerV2.translateAllowedSlugToJids()

# Public API v2

GET         /api/v2/problems/:problemJid/render/:mediaFilename                      org.iatoki.judgels.sandalphon.controllers.api.pub.v2.PublicProblemAPIControllerV2.renderMedia(problemJid, mediaFilename)
